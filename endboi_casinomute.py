from datetime import timedelta
import asyncio
from aiogram import Bot, Dispatcher, types
import os

API_TOKEN = "7402083428:AAFa1rAJrZecCuMKr1iX2ZXSq7SGdHRriJo"   # –µ—Å–ª–∏ —Ç—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Render, –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ os.getenv("API_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message()
async def handle_dice(message: types.Message):
    if message.dice:  # –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π emoji
        if message.dice.emoji == "üé∞":  # —ç—Ç–æ —Å–ª–æ—Ç
            # –ú—É—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 15 –º–∏–Ω—É—Ç
            await bot.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=message.from_user.id,
                permissions=types.ChatPermissions(can_send_messages=False),
                until_date=message.date + timedelta(minutes=30)
            )
            await message.reply(
                f"{message.from_user.first_name}, –Ω—É —á—Ç–æ–∂ —Ç—ã –∑–∞ –ª—É–¥–æ–º–∞–Ω. –ü–æ–ª—É—á–∞–π 30 –º–∏–Ω—É—Ç –º—É—Ç–∞."
            )
            print(f"–ú—É—Ç: {message.from_user.full_name}, —Å–ª–æ—Ç: {message.dice.value}")

# --- keep-alive –∑–∞–¥–∞—á–∞ (–≤—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ –∑–∞–±—ã—Ç—å) ---
async def keep_alive():
    while True:
        try:
            await bot.get_me()
        except Exception as e:
            print("Keep-alive error:", repr(e))
        await asyncio.sleep(5 * 60)  # –ø–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
# --------------------------------------------

async def main():
    print("SlotDiceBot –∑–∞–ø—É—â–µ–Ω...")
    asyncio.create_task(keep_alive())  # –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
