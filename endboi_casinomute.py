from datetime import timedelta
import asyncio
from aiogram import Bot, Dispatcher, types
import os
import threading
from flask import Flask
import random  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –ª–æ–≥–æ–≤ keep-alive

API_TOKEN = os.getenv("API_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
if not API_TOKEN:
    raise ValueError("API_TOKEN –ø—É—Å—Ç–æ–π! –ü—Ä–æ–≤–µ—Ä—å Environment Variables –≤ Render")

# –≠–º–æ–¥–∑–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –º—É—Ç–∏–º
FORBIDDEN_EMOJIS = ["üé∞", "‚öΩ", "üèÄ", "üé≤", "üéØ", "üé≥"]

@dp.message()
async def handle_dice(message: types.Message):
    if message.dice:
        emoji = message.dice.emoji
        if any(emoji.startswith(e) for e in FORBIDDEN_EMOJIS):
            await bot.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=message.from_user.id,
                permissions=types.ChatPermissions(can_send_messages=False),
                until_date=message.date + timedelta(minutes=30)
            )
            await message.reply(
                f"{message.from_user.first_name}, –Ω—É —á—Ç–æ–∂ —Ç—ã –∑–∞ –ª—É–¥–æ–º–∞–Ω. –ü–æ–ª—É—á–∞–π 30 –º–∏–Ω—É—Ç –º—É—Ç–∞."
            )
            print(f"–ú—É—Ç: {message.from_user.full_name}, —Å–ª–æ—Ç: {message.dice.value}")

# --- keep-alive —á–µ—Ä–µ–∑ –º–∏–Ω–∏ Flask —Å–µ—Ä–≤–µ—Ä ---
app = Flask("keep_alive")

@app.route("/")
def home():
    return "ok"

def run_web():
    app.run(host="0.0.0.0", port=10000)

# –∑–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_web).start()
# --------------------------------------------

async def keep_alive_logs():
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –∑–∞–¥–∞—á–∞ –∂–∏–≤–∞
    while True:
        print("Keep-alive tick:", random.randint(1,100))
        await asyncio.sleep(300)  # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

async def on_startup():
    # –ó–∞–ø—É—Å–∫–∞–µ–º keep_alive_logs –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å polling
    asyncio.create_task(keep_alive_logs())

async def main():
    print("SlotDiceBot –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot, on_startup=on_startup)

if __name__ == "__main__":
    asyncio.run(main())



